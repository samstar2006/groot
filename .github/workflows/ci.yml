name: "Build iOS app"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_with_signing:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Git for Authentication
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global url."https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: List repository contents
        run: |
            echo "Listing repository contents to verify path"
            ls -R

      - name: List available schemes
        run: |
            xcodebuild -list -project "I am Groot.xcodeproj"

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Verify the contents of the decoded files
          echo "Contents of the provisioning profile file:"
          cat $PP_PATH
          echo "Contents of the certificate file:"
          cat $CERTIFICATE_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/
          echo "Provisioning profile installed at: $PP_PATH"
          echo "Copied provisioning profile to ~/Library/MobileDevice/Provisioning Profiles"

      - name: Verify provisioning profile installation
        run: |
          echo "Listing installed provisioning profiles:"
          ls -l ~/Library/MobileDevice/Provisioning\ Profiles/
          echo "Provisioning profile details:"
          security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision || cat ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision

      - name: Print environment variables
        run: |
          echo "Development team: $DEVELOPMENT_TEAM_ID"
          echo "Provisioning profile specifier: $PROVISIONING_PROFILE_SPECIFIER"
        env:
          DEVELOPMENT_TEAM_ID: ${{ secrets.DEVELOPMENT_TEAM_ID }}
          PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}

      - name: Build and sign iOS app using xcodebuild
        env:
          KEYCHAIN_PATH: $RUNNER_TEMP/app-signing.keychain-db
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          DEVELOPMENT_TEAM_ID: ${{ secrets.DEVELOPMENT_TEAM_ID }}
          PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
        run: |
          echo "Using development team: ${DEVELOPMENT_TEAM_ID}"
          echo "Using provisioning profile specifier: ${PROVISIONING_PROFILE_SPECIFIER}"
          echo "Keychain path: ${KEYCHAIN_PATH}"
          xcodebuild -project "I am Groot.xcodeproj" -scheme "I am Groot" \
            -archivePath $RUNNER_TEMP/iamgroot.xcarchive \
            -sdk iphoneos \
            -configuration Debug \
            clean archive \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="iPhone Distribution" \
            PROVISIONING_PROFILE_SPECIFIER=${PROVISIONING_PROFILE_SPECIFIER} \
            DEVELOPMENT_TEAM_ID=${DEVELOPMENT_TEAM_ID} \
            OTHER_CODE_SIGN_FLAGS="--keychain $KEYCHAIN_PATH"

      - name: Export the archive
        env:
          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST_BASE64 }}
        run: |
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/iamgroot.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $RUNNER_TEMP/build

      - name: Upload the built IPA file to S3
        run: |
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          aws s3 cp "$RUNNER_TEMP/build/I am Groot.ipa" "s3://${{ secrets.AWS_S3_BUCKET }}/ipa/iamgroot-${TIMESTAMP}.ipa"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
