# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# default_platform(:ios)

# platform :ios do
#   desc "Push a new beta build to TestFlight"
#   lane :beta do
#     increment_build_number(xcodeproj: "I am Groot.xcodeproj")
#     build_app(scheme: "I am Groot")
#     upload_to_testflight
#   end
# end



# fastlane/Fastfile
platform :ios do
  desc "Automatic update the version number and create release branch"
  lane :update_version do
    # Show option update type
    update_type = UI.select("Select update type: ", ["major", "minor", "patch"])

    # Checkout to the main branch
    sh("git checkout main") # Use 'main' if it's the default branch, otherwise 'master'
    
    # Pull the main branch to make sure always updated
    sh("git pull origin main") # Use 'main' if it's the default branch, otherwise 'master'
    
    # Increment the version number by update_type
    new_version = increment_version_number(bump_type: update_type)

    # Increment the build number
    increment_build_number(
      build_number: latest_testflight_build_number(api_key: app_store_connect_api_key(
        key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
        issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
        key_filepath: "./fastlane/AuthKey.p8" # Updated to use key_filepath
      )) + 1
    )

    # Create a new release branch and checkout
    sh("git checkout -b release/#{new_version}")
    
    # Add changes
    sh("git add --all")
    
    # Commit changes
    sh("git commit -m 'Update the app version to #{new_version}'")
    
    # Push release branch to origin
    sh("git push origin release/#{new_version}")
    
    UI.success("Successfully updated app version to #{new_version}")
  end

  desc "Upload IPA to TestFlight"
  lane :upload_ipa_to_testflight do |options|
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
      key_filepath: "./fastlane/AuthKey_7JB438T2RU.p8" # Updated to use key_filepath
    )

    build_app(
      workspace: "I am Groot.xcodeproj", # Update this if you're using an Xcode project
      scheme: "I am Groot"
    )

    upload_to_testflight(
      ipa: options[:ipa],
      api_key: api_key,
      app_identifier: "com.iam.groot" # Ensure this matches exactly
    )
  end
end
